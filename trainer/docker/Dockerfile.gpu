# Use NVIDIA CUDA 12.8 runtime image
FROM nvidia/cuda:12.8.0-runtime-ubuntu22.04

WORKDIR /app

# Set timezone to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install system dependencies and Python 3.12
RUN apt-get update && \
  apt-get install -y \
  software-properties-common \
  && add-apt-repository ppa:deadsnakes/ppa \
  && apt-get update && \
  apt-get install -y \
  python3.12 \
  python3.12-dev \
  python3.12-venv \
  python3-pip \
  swig \
  build-essential \
  make \
  curl \
  ca-certificates \
  git \
  && rm -rf /var/lib/apt/lists/*

# Set Python 3.12 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1

# Install uv
ADD https://astral.sh/uv/install.sh /uv-installer.sh
RUN sh /uv-installer.sh && rm /uv-installer.sh
ENV PATH="/root/.local/bin/:$PATH"

# Set CUDA environment variables
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Copy dependency files
COPY pyproject.toml uv.lock ./

# Install Python dependencies with CUDA support
RUN uv pip install --system .

# Copy application code
COPY src/ ./src/
COPY Makefile .

# Create models directory
RUN mkdir -p /app/models

CMD ["make", "train"]
